<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
        xmlns="http://java.sun.com/xml/ns/persistence/orm"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
        version="2.0">

    <named-query name="User.getUserByUsername">
        <query>
            SELECT u FROM User u WHERE u.username = :username
        </query>
    </named-query>

    <named-native-query name="User.getAuthorities">
        <query>
            select
              case when r.role_id is null
                then p.name
                else concat(r.name, '.', p.name)
              end as authority
            from(
                select distinct p.*, rp.role_id
                from t_privilege p
                join t_role_privilege rp on (rp.privilege_id=p.privilege_id)
                where rp.role_id in (select role_id from t_user_role where user_id = :userId)
                union
                select *, null as role_id
                from t_privilege
                where privilege_id in (select t_user_privilege.privilege_id from t_user_privilege where user_id = :userId)
            ) p left join t_role r on r.role_id=p.role_id
            order by r.name, p.name
        </query>
    </named-native-query>
</entity-mappings>